""" 
9.5 Функция zip (Задача 3)
Подвиг 3. Вводится таблица целых чисел. Необходимо сначала эту таблицу представить двумерным списком чисел,
а затем, с помощью функции zip выполнить транспонирование этой таблицы (то есть, строки заменить на соответствующие столбцы).
Результат вывести на экран в виде таблицы чисел (числа в строках следуют через пробел).

P. S. Для считывания списка целиком в программе уже записаны начальные строчки.

Sample Input:
1 2 3 4
5 6 7 8
9 8 7 6

Sample Output:
1 5 9
2 6 8
3 7 7
4 8 6
"""

import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список строк lst_in)
# print(lst_in) -> ['1 2 3 4', '5 6 7 8', '9 8 7 6']

# 5 строки ниже описывают функционал, который можно
# реализовать в 1 строку через генератор
"""
lst = []
for text in lst_in:
    numbers = tuple(map(int, text.split()))
    lst.append(numbers)  
print(lst) -> [(1, 2, 3, 4), (5, 6, 7, 8), (9, 8, 7, 6)]
"""

numbers = tuple(tuple(map(int, lst.split())) for lst in lst_in)
# создаём кортеж кортежей из чисел
# print(numbers) -> ((1, 2, 3, 4), (5, 6, 7, 8), (9, 8, 7, 6))

# транспонируем кортежи и выводим построчно
result = tuple(zip(*numbers))
# print(result) -> ((1, 5, 9), (2, 6, 8), (3, 7, 7), (4, 8, 6))

for numbers in result:
    print(*numbers)
